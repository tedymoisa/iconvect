name: CI Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    name: Build, Lint, Format & Test
    runs-on: ubuntu-latest
    env:
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Set Database URL for Prisma
        run: echo "DATABASE_URL=postgresql://testuser:testpassword@localhost:5432/testdb" >> $GITHUB_ENV

      - name: Wait for PostgreSQL service to be ready
        run: sleep 5

      - name: Run Prisma Migrate Deploy
        run: pnpm run db:migrate

      - name: Lint code
        run: pnpm run lint
        env:
          SKIP_ENV_VALIDATION: true

      - name: Check formatting
        run: pnpm run format:check

      # - name: Run tests
      #   if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
      #   run: pnpm test

      - name: Build Next.js application
        run: pnpm run build
        env:
          SKIP_ENV_VALIDATION: true
